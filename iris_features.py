# -*- coding: utf-8 -*-
"""Bienvenue dans Colab

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/notebooks/intro.ipynb
"""

import cv2
import numpy as np
from matplotlib import pyplot as plt
from skimage import feature

# Load the image
image = cv2.imread("/content/ahmed.jpg")

# Resize the image to a standard size
IMG_HEIGHT = 224
IMG_WIDTH = 224
resized_image = cv2.resize(image, (IMG_WIDTH, IMG_HEIGHT))

# Perform iris segmentation (replace with your iris segmentation code)
# This step would require implementing iris segmentation algorithms
# such as Hough circle transform, or other techniques.

# Initialize the SIFT detector
sift = cv2.SIFT_create()

# Convert resized image to grayscale for keypoint detection
gray_resized_image = cv2.cvtColor(resized_image, cv2.COLOR_BGR2GRAY)

# Detect keypoints and descriptors
keypoints, descriptors = sift.detectAndCompute(gray_resized_image, None)

# Draw keypoints on the original image
image_with_keypoints = cv2.drawKeypoints(resized_image, keypoints, None, flags=cv2.DRAW_MATCHES_FLAGS_DRAW_RICH_KEYPOINTS)

# Extract LBP features from the iris region
lbp_features = feature.local_binary_pattern(gray_resized_image, 24, 8, method='uniform')

# Visualize the result
plt.figure(figsize=(10, 5))

# Original image with keypoints
plt.subplot(1, 2, 1)
plt.imshow(cv2.cvtColor(resized_image, cv2.COLOR_BGR2RGB))
plt.scatter([kp.pt[0] for kp in keypoints], [kp.pt[1] for kp in keypoints], color='red', s=5)
plt.title('Image with SIFT Keypoints')
plt.axis('off')

# Extracted LBP features
plt.subplot(1, 2, 2)
plt.imshow(lbp_features, cmap='gray')
plt.title('Local Binary Patterns (LBP) Features')
plt.axis('off')

plt.show()